{"ast":null,"code":"var _jsxFileName = \"/home/dima/study/js/react/my-app/src/components/Dialogs/Dialogs.jsx\";\nimport React, { Component } from 'react';\nimport classes from './Dialogs.module.css';\nimport Dialog from \"./Dialog/Dialog\";\nimport Message from \"./Message/Message\";\nimport UncheckedDialog from \"./UncheckedDialog/UncheckedDialog\";\nimport UncheckedMessage from \"./UncheckedMessages/UncheckedMessages\";\n\nconst Dialogs = props => {\n  let dialogsElements = props.state.dialogsData.map(dialog => React.createElement(Dialog, {\n    name: dialog.name,\n    id: dialog.id,\n    photo: dialog.photo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }));\n  let messagesElements = props.state.messagesData.map(message => React.createElement(Message, {\n    message: message.message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }));\n  let uncheckedDialogsElements = props.state.dialogsUncheckedData.map(uncheckedDialog => React.createElement(UncheckedDialog, {\n    name: uncheckedDialog.name,\n    id: uncheckedDialog.id,\n    photo: uncheckedDialog.photo,\n    comment: uncheckedDialog.comment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }));\n  let uncheckedMessagesElements = props.state.messagesUncheckedData.map(message => React.createElement(UncheckedMessage, {\n    message: message.message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }));\n  let addMessageElement = React.createRef();\n\n  let addMessage = () => {\n    let textMessage = addMessageElement.current.value;\n    props.addMessage(textMessage);\n    addMessageElement.current.value = '';\n  };\n\n  let onMessageChange = () => {\n    let textMessage = addMessageElement.current.value;\n    props.updateNewMessageText(textMessage);\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.dialogs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.dialogsItems,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, dialogsElements), React.createElement(\"div\", {\n    className: classes.messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, messagesElements), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, uncheckedDialogsElements), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, uncheckedMessagesElements), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    onChange: onMessageChange,\n    ref: addMessageElement,\n    value: props.newMessageText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: addMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Add Message\")));\n};\n\nexport default Dialogs;","map":{"version":3,"sources":["/home/dima/study/js/react/my-app/src/components/Dialogs/Dialogs.jsx"],"names":["React","Component","classes","Dialog","Message","UncheckedDialog","UncheckedMessage","Dialogs","props","dialogsElements","state","dialogsData","map","dialog","name","id","photo","messagesElements","messagesData","message","uncheckedDialogsElements","dialogsUncheckedData","uncheckedDialog","comment","uncheckedMessagesElements","messagesUncheckedData","addMessageElement","createRef","addMessage","textMessage","current","value","onMessageChange","updateNewMessageText","dialogs","dialogsItems","messages","newMessageText"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEvB,MAAIC,eAAe,GAAGD,KAAK,CAACE,KAAN,CAAYC,WAAZ,CACjBC,GADiB,CACbC,MAAM,IAAI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEA,MAAM,CAACC,IAArB;AAA2B,IAAA,EAAE,EAAED,MAAM,CAACE,EAAtC;AAA0C,IAAA,KAAK,EAAEF,MAAM,CAACG,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,CAAtB;AAGA,MAAIC,gBAAgB,GAAGT,KAAK,CAACE,KAAN,CAAYQ,YAAZ,CAClBN,GADkB,CACdO,OAAO,IAAI,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,OAAO,CAACA,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,CAAvB;AAGA,MAAIC,wBAAwB,GAAGZ,KAAK,CAACE,KAAN,CAAYW,oBAAZ,CAC1BT,GAD0B,CACtBU,eAAe,IAAI,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEA,eAAe,CAACR,IAAvC;AAA6C,IAAA,EAAE,EAAEQ,eAAe,CAACP,EAAjE;AAAqE,IAAA,KAAK,EAAEO,eAAe,CAACN,KAA5F;AAAmG,IAAA,OAAO,EAAEM,eAAe,CAACC,OAA5H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,CAA/B;AAGA,MAAIC,yBAAyB,GAAGhB,KAAK,CAACE,KAAN,CAAYe,qBAAZ,CAC3Bb,GAD2B,CACvBO,OAAO,IAAI,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEA,OAAO,CAACA,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADY,CAAhC;AAGA,MAAIO,iBAAiB,GAAG1B,KAAK,CAAC2B,SAAN,EAAxB;;AAEA,MAAIC,UAAU,GAAG,MAAM;AACnB,QAAIC,WAAW,GAAGH,iBAAiB,CAACI,OAAlB,CAA0BC,KAA5C;AACAvB,IAAAA,KAAK,CAACoB,UAAN,CAAiBC,WAAjB;AACAH,IAAAA,iBAAiB,CAACI,OAAlB,CAA0BC,KAA1B,GAAkC,EAAlC;AACH,GAJD;;AAMA,MAAIC,eAAe,GAAG,MAAM;AACxB,QAAIH,WAAW,GAAGH,iBAAiB,CAACI,OAAlB,CAA0BC,KAA5C;AACAvB,IAAAA,KAAK,CAACyB,oBAAN,CAA2BJ,WAA3B;AACH,GAHD;;AAKA,SACI;AAAK,IAAA,SAAS,EAAE3B,OAAO,CAACgC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAEhC,OAAO,CAACiC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK1B,eADL,CADJ,EAII;AAAK,IAAA,SAAS,EAAEP,OAAO,CAACkC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKnB,gBADL,CAJJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,wBADL,CAPJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKI,yBADL,CAVJ,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAU,IAAA,QAAQ,EAAEQ,eAApB;AAAqC,IAAA,GAAG,EAAEN,iBAA1C;AAA6D,IAAA,KAAK,EAAElB,KAAK,CAAC6B,cAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAbJ,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,OAAO,EAAET,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CAhBJ,CADJ;AAsBH,CAjDD;;AAmDA,eAAerB,OAAf","sourcesContent":["import React, {Component} from 'react';\nimport classes from './Dialogs.module.css';\nimport Dialog from \"./Dialog/Dialog\";\nimport Message from \"./Message/Message\";\nimport UncheckedDialog from \"./UncheckedDialog/UncheckedDialog\"\nimport UncheckedMessage from \"./UncheckedMessages/UncheckedMessages\";\n\nconst Dialogs = (props) => {\n\n    let dialogsElements = props.state.dialogsData\n        .map(dialog => <Dialog name={dialog.name} id={dialog.id} photo={dialog.photo}/>);\n\n    let messagesElements = props.state.messagesData\n        .map(message => <Message message={message.message}/>);\n\n    let uncheckedDialogsElements = props.state.dialogsUncheckedData\n        .map(uncheckedDialog => <UncheckedDialog name={uncheckedDialog.name} id={uncheckedDialog.id} photo={uncheckedDialog.photo} comment={uncheckedDialog.comment}/>);\n\n    let uncheckedMessagesElements = props.state.messagesUncheckedData\n        .map(message => <UncheckedMessage message={message.message}/>);\n\n    let addMessageElement = React.createRef()\n\n    let addMessage = () => {\n        let textMessage = addMessageElement.current.value;\n        props.addMessage(textMessage);\n        addMessageElement.current.value = '';\n    };\n\n    let onMessageChange = () => {\n        let textMessage = addMessageElement.current.value;\n        props.updateNewMessageText(textMessage)\n    };\n\n    return (\n        <div className={classes.dialogs}>\n            <div className={classes.dialogsItems}>\n                {dialogsElements}\n            </div>\n            <div className={classes.messages}>\n                {messagesElements}\n            </div>\n            <div>\n                {uncheckedDialogsElements}\n            </div>\n            <div>\n                {uncheckedMessagesElements}\n            </div>\n            <div>\n                <textarea onChange={onMessageChange} ref={addMessageElement} value={props.newMessageText}></textarea>\n            </div>\n            <div>\n                <button onClick={addMessage}>Add Message</button>\n            </div>\n        </div>\n    )\n};\n\nexport default Dialogs;"]},"metadata":{},"sourceType":"module"}